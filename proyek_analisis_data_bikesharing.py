# -*- coding: utf-8 -*-
"""Proyek Analisis Data BikeSharing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F_gqXiQWKogvAYwObqIwc0kUGj-yVT-9

# Proyek Analisis Data: [Bike Sharing Dataset]
- **Nama**:Artika Yudia
- **Email:** aartikasari88@gmail.com
- **ID Dicoding:** artikayudia

## Menentukan Pertanyaan Bisnis

- Pertanyaan 1 : Bagaimana kondisi cuaca memengaruhi pengguna kasual dan terdaftar?
- Pertanyaan 2 : Apakah penggunaan sepeda meningkat pada hari libur dibandingkan hari kerja?
- Pertanyaan 3 : Bagaimana pengaruh jam (hr) terhadap penggunaan sepeda di hari kerja dan akhir pekan?

## Import Semua Packages/Library yang Digunakan
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from datetime import datetime

"""## Data Wrangling

### Gathering Data

Mengimport data dari Google Drive
"""

from google.colab import drive
drive.mount('/content/drive')

"""Membaca tabel day"""

day = pd.read_csv("drive/MyDrive/Bike-sharing-dataset/day.csv")
day

"""Membaca tabel hour"""

hour = pd.read_csv("drive/MyDrive/Bike-sharing-dataset/hour.csv")
hour

"""**Insight:**
- Jumlah Baris dalam tabel day : 731
- Jumlah Baris dalam tabel hour : 17379

### Assessing Data

Menilai data day
"""

day.info()

"""Tipe dteday seharusnya datetime, bukan object"""

print("Jumlah duplikasi: ",day.duplicated().sum())

"""Tidak ada duplikasi"""

hour.info()

"""Tipe dteday seharusnya datetime, bukan object"""

print("Jumlah duplikasi: ",hour.duplicated().sum())

"""Tidak ada duplikasi"""

day.describe()

"""Tidak ada keanehan dalam statistik dari day"""

hour.describe()

"""Tidak ada keanehan dalam statistik dari hour

**Insight:**
- tipe dteday yang harus diubah

### Cleaning Data

Mengubah tipe dteday
"""

datetime_columns = ["dteday"]

for column in datetime_columns:
  day[column] = pd.to_datetime(day[column])

day.info()

"""Berhasil diubah"""

datetime_columns = ["dteday"]

for column in datetime_columns:
  hour[column] = pd.to_datetime(hour[column])

hour.info()

"""## Exploratory Data Analysis (EDA)

### Explore ...

rangkuman parameter statistik dari data
"""

day.describe(include="all")

hour.describe(include="all")

"""Mengetahui Bagaimana kondisi cuaca memengaruhi pengguna kasual dan terdaftar"""

# Grouping by 'weathersit' and aggregating casual and registered user data
weather_agg = day.groupby(by="weathersit").agg({
    "casual": ["sum", "mean", "max", "min", "std"],
    "registered": ["sum", "mean", "max", "min", "std"],
    "cnt": ["sum", "mean", "max", "min", "std"]
})

# Rename the index values for better clarity
weather_agg.index = ['Clear/Few Clouds', 'Mist/Cloudy', 'Light Rain/Snow']

# Display the result
weather_agg

"""Dilihat dari pivot table di atas, dapat diketahui bahwa kondisi cuaca sangat mempengaruhi pengguna, kebanyakan pengguna memilih bersepeda di cuaca Clear/Few Clouds

berdasarkan keadaan cuaca lebih banyak pengunaan sepeda pada casual atau regestered
"""

print(day['weathersit'].unique())

# Group by 'weathersit' and aggregate the total usage for casual and registered users
weather_agg = day.groupby('weathersit').agg({
    'casual': 'sum',
    'registered': 'sum'
})

# Based on the unique values, adjust the index labels
# Assuming there are only 3 weather conditions
weather_agg.index = ['Clear/Few Clouds', 'Mist/Cloudy', 'Light Rain/Snow']

# Plot the result
weather_agg.plot(kind='bar', figsize=(10, 6), color=['orange', 'blue'])
plt.title('Total Bike Usage by Weather Condition')
plt.ylabel('Total Number of Bikes Used')
plt.xlabel('Weather Condition')
plt.xticks(rotation=45)
plt.legend(['Casual Users', 'Registered Users'])
plt.grid(True)
plt.show()

"""Berdasarkan hasil diatas saat cuaca clear/few clouds lebih banyak pengguna sepeda yaitu regestered users

penggunaan sepeda pada jam berapa terbanyak pada peserta casual atau registed
"""

hourly_usage = hour.groupby('hr').agg({
    'casual': 'sum',
    'registered': 'sum'
})

# Plot the result
hourly_usage.plot(kind='bar', figsize=(12, 6), color=['orange', 'blue'])
plt.title('Total Bike Usage by Hour')
plt.ylabel('Total Number of Bikes Used')
plt.xlabel('Hour of the Day')
plt.xticks(rotation=0)
plt.legend(['Casual Users', 'Registered Users'])
plt.grid(True)
plt.show()

"""pada bulan berapa penggunaan sepeda terbanyak"""

monthly_usage = day.groupby('mnth').agg({
    'casual': 'sum',
    'registered': 'sum',
    'cnt': 'sum'  # Total usage (casual + registered)
})

# Plot the result
monthly_usage.plot(kind='bar', figsize=(12, 6), color=['orange', 'blue', 'green'])
plt.title('Total Bike Usage by Month')
plt.ylabel('Total Number of Bikes Used')
plt.xlabel('Month')
plt.xticks(ticks=range(12), labels=[
    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'], rotation=0)
plt.legend(['Casual Users', 'Registered Users', 'Total Users'])
plt.grid(True)
plt.show()

"""penggunaan sepeda berdasarkan jam pada hari kerja"""

working_days = hour[hour['workingday'] == 1]

# Group by hour and aggregate total usage for casual and registered users
hourly_usage_working_days = working_days.groupby('hr').agg({
    'casual': 'sum',
    'registered': 'sum',
    'cnt': 'sum'  # Total usage (casual + registered)
})

# Plot the result
hourly_usage_working_days.plot(kind='bar', figsize=(12, 6), color=['orange', 'blue', 'green'])
plt.title('Total Bike Usage by Hour on Working Days')
plt.ylabel('Total Number of Bikes Used')
plt.xlabel('Hour of the Day')
plt.xticks(rotation=0)
plt.legend(['Casual Users', 'Registered Users', 'Total Users'])
plt.grid(True)
plt.show()

"""Weekend"""

weekend_days = hour[hour['workingday'] == 0]

# Group by hour and aggregate total usage for casual and registered users
hourly_usage_weekends = weekend_days.groupby('hr').agg({
    'casual': 'sum',
    'registered': 'sum',
    'cnt': 'sum'  # Total usage (casual + registered)
})

# Plot the result
hourly_usage_weekends.plot(kind='bar', figsize=(12, 6), color=['orange', 'blue', 'green'])
plt.title('Total Bike Usage by Hour on Weekends')
plt.ylabel('Total Number of Bikes Used')
plt.xlabel('Hour of the Day')
plt.xticks(rotation=0)
plt.legend(['Casual Users', 'Registered Users', 'Total Users'])
plt.grid(True)
plt.show()

"""Menghitung jumlah hari sejak terakhir kali pelanggan melakukan pembelian.


"""

day['dteday'] = pd.to_datetime(day['dteday'])

# Menentukan tanggal analisis (tanggal hari ini)
current_date = datetime.now()

# Menghitung Recency untuk pengguna berdasarkan ID atau kategori pengguna
# Di sini kita asumsikan kita ingin menghitung Recency untuk casual dan registered
recency_casual = day.groupby('casual')['dteday'].max().reset_index()
recency_registered = day.groupby('registered')['dteday'].max().reset_index()

# Menghitung Recency (jumlah hari sejak terakhir kali rental)
recency_casual['recency'] = (current_date - recency_casual['dteday']).dt.days
recency_registered['recency'] = (current_date - recency_registered['dteday']).dt.days

# Menampilkan hasil Recency
print("Recency untuk pengguna kasual:")
print(recency_casual[['casual', 'recency']])

print("\nRecency untuk pengguna terdaftar:")
print(recency_registered[['registered', 'recency']])

"""- Recency untuk Pengguna Kasual: Data menunjukkan jumlah hari sejak pengguna kasual terakhir melakukan peminjaman sepeda. Nilai recency berkisar antara 4294 hingga 5008 hari, menunjukkan variasi dalam seberapa baru mereka menggunakan layanan.

- Recency untuk Pengguna Terdaftar: Pengguna terdaftar memiliki recency yang juga bervariasi antara 4371 hingga 4994 hari. Nilai recency ini dapat membantu dalam memahami seberapa aktif pengguna terdaftar dibandingkan dengan pengguna kasual.

Frequency: Menghitung jumlah total transaksi yang dilakukan oleh pelanggan dalam periode tertentu.
"""

frequency_casual = day.groupby('casual')['cnt'].count().reset_index()
frequency_registered = day.groupby('registered')['cnt'].count().reset_index()

# Mengganti nama kolom untuk kejelasan
frequency_casual.columns = ['casual', 'frequency']
frequency_registered.columns = ['registered', 'frequency']

# Menampilkan hasil Frequency
print("Frequency untuk pengguna kasual:")
print(frequency_casual)

print("\nFrequency untuk pengguna terdaftar:")
print(frequency_registered)

"""- Frequency untuk Pengguna Kasual: Tabel menunjukkan jumlah total peminjaman sepeda untuk pengguna kasual. Nilai frekuensi bervariasi, tetapi sebagian besar pengguna melakukan satu peminjaman. Hal ini mengindikasikan bahwa banyak pengguna kasual mungkin hanya mencoba layanan tanpa melakukan peminjaman berulang.

- Frequency untuk Pengguna Terdaftar: Tabel menunjukkan frekuensi peminjaman untuk pengguna terdaftar. Sebagian besar pengguna terdaftar juga melakukan satu peminjaman, tetapi terdapat juga yang memiliki frekuensi lebih tinggi. Ini menunjukkan bahwa pengguna terdaftar cenderung lebih aktif dalam menggunakan layanan dibandingkan pengguna kasual.
"""

monthly_orders = day.groupby('mnth')['cnt'].sum().reset_index()

# Langkah 3: Membuat line chart
plt.figure(figsize=(10, 6))
plt.plot(monthly_orders['mnth'], monthly_orders['cnt'], marker='o')
plt.title('Jumlah Order Sepeda per Bulan')
plt.xlabel('Bulan')
plt.ylabel('Jumlah Order')
plt.xticks(monthly_orders['mnth'], ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni',
                                       'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'])
plt.grid()
plt.show()

# Memfilter data berdasarkan kondisi cuaca yang relevan
weather_conditions = {
    1: 'Clear, Few clouds',
    2: 'Mist + Cloudy',
    3: 'Light Rain/Snow'
}

# Mengelompokkan jumlah penyewaan berdasarkan cuaca
weather_orders = day[day['weathersit'].isin(weather_conditions.keys())].groupby('weathersit')['cnt'].sum().reset_index()

# Mengganti nilai weathersit dengan nama cuaca untuk kejelasan
weather_orders['weathersit'] = weather_orders['weathersit'].map(weather_conditions)

# Membuat bar chart
plt.figure(figsize=(10, 6))
plt.bar(weather_orders['weathersit'], weather_orders['cnt'], color=['#ff9999', '#66b3ff', '#99ff99'])
plt.title('Jumlah Penyewaan Sepeda Berdasarkan Kondisi Cuaca')
plt.xlabel('Kondisi Cuaca')
plt.ylabel('Jumlah Penyewaan')
plt.xticks(rotation=15)
plt.grid(axis='y')
plt.tight_layout()
plt.show()

"""**Insight:**
- xxx
- xxx
"""

# Menghitung total penyewaan untuk pengguna kasual dan terdaftar
casual_orders = day['casual'].sum()
registered_orders = day['registered'].sum()

# Membuat pie chart untuk perbandingan
labels = ['Kasual', 'Terdaftar']
sizes = [casual_orders, registered_orders]
colors = ['#ff9999', '#66b3ff']

plt.figure(figsize=(8, 8))
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title('Perbandingan Penyewaan Sepeda: Kasual vs Terdaftar')
plt.axis('equal')  # Equal aspect ratio ensures that pie chart is circular.
plt.show()

"""## Visualization & Explanatory Analysis

### Pertanyaan 1: Bagaimana kondisi cuaca memengaruhi pengguna kasual dan terdaftar?
"""

weather_conditions = {
    1: 'Clear/Few Clouds',
    2: 'Mist/Cloudy',
    3: 'Light Rain/Snow',
    4: 'Heavy Rain/Ice'
}
day['weathersit'] = day['weathersit'].map(weather_conditions)

# Menghitung total penyewaan berdasarkan kondisi cuaca untuk pengguna kasual dan terdaftar
weather_usage = day.groupby('weathersit').agg({
    'casual': 'sum',
    'registered': 'sum',
    'cnt': 'sum'
}).reset_index()

# Visualisasi menggunakan bar chart
fig, ax = plt.subplots(figsize=(12, 6))
weather_usage.set_index('weathersit').plot(kind='bar', ax=ax)

# Menambahkan detail ke grafik
plt.title('Penggunaan Sepeda Berdasarkan Kondisi Cuaca')
plt.xlabel('Kondisi Cuaca')
plt.ylabel('Jumlah Penyewaan')
plt.xticks(rotation=45)
plt.legend(title='Tipe Pengguna', labels=['Pengguna Kasual', 'Pengguna Terdaftar', 'Total Penyewaan'])
plt.grid(axis='y')
plt.tight_layout()
plt.show()

"""- Kondisi Cuaca Cerah (Clear/Few Clouds):
Jumlah penyewaan sepeda tertinggi tercatat pada kondisi cuaca cerah. Pengguna terdaftar dan pengguna kasual menunjukkan angka penyewaan yang signifikan, dengan total penyewaan juga mencapai puncaknya di sini. Ini mengindikasikan bahwa cuaca yang baik sangat mendorong orang untuk menggunakan sepeda.
- Kondisi Cuaca Berkabut (Mist/Cloudy):
Penyewaan sepeda di kondisi ini juga cukup baik, tetapi tidak setinggi saat cuaca cerah. Meskipun pengguna terdaftar memiliki angka yang lebih baik dibandingkan pengguna kasual, total penyewaan tetap menunjukkan hasil yang positif.
- Kondisi Cuaca Hujan Ringan (Light Rain/Snow):
Di bawah kondisi cuaca ini, jumlah penyewaan sepeda jauh lebih rendah. Ini menunjukkan bahwa cuaca buruk sangat mempengaruhi keinginan orang untuk menggunakan sepeda, baik oleh pengguna kasual maupun terdaftar. Pengguna terdaftar pun tampaknya cenderung menghindari penggunaan sepeda dalam kondisi ini.

### Pertanyaan 2: Apakah penggunaan sepeda meningkat pada hari libur dibandingkan hari kerja?
"""

holiday_usage = day.groupby('holiday')['cnt'].sum().reset_index()

# Menamai kolom untuk kejelasan
holiday_usage.columns = ['Holiday', 'Total Usage']

# Mengganti nilai 0 dan 1 menjadi 'Working Day' dan 'Holiday'
holiday_usage['Holiday'] = holiday_usage['Holiday'].map({0: 'Working Day', 1: 'Holiday'})

# Visualisasi menggunakan bar chart
plt.figure(figsize=(8, 5))
plt.bar(holiday_usage['Holiday'], holiday_usage['Total Usage'], color=['blue', 'orange'])
plt.title('Perbandingan Penggunaan Sepeda pada Hari Libur dan Hari Kerja')
plt.xlabel('Status Hari')
plt.ylabel('Total Penyewaan Sepeda')
plt.grid(axis='y')
plt.tight_layout()
plt.show()

# Menampilkan total penyewaan untuk analisis lebih lanjut
print(holiday_usage)

"""- Penggunaan pada Hari Kerja:
Jumlah penyewaan sepeda pada hari kerja sangat tinggi, mencapai lebih dari 3 juta penyewaan. Ini menunjukkan bahwa sepeda banyak digunakan sebagai alat transportasi pada hari-hari biasa.
- Penggunaan pada Hari Libur:
Sebaliknya, penggunaan sepeda pada hari libur sangat rendah, dengan jumlah penyewaan yang hampir tidak signifikan dibandingkan dengan hari kerja. Hal ini mungkin menunjukkan bahwa orang lebih cenderung melakukan aktivitas lain di hari libur atau mungkin lebih memilih transportasi alternatif.

**Insight:**
- xxx
- xxx

## Pertanyaan 3: Bagaimana pengaruh jam (hr) terhadap penggunaan sepeda di hari kerja dan akhir pekan?
"""

working_days = hour[hour['workingday'] == 1]
hourly_usage_working = working_days.groupby('hr')['cnt'].sum().reset_index()

# Menghitung total peminjaman sepeda berdasarkan jam di akhir pekan
weekend_days = hour[hour['workingday'] == 0]
hourly_usage_weekend = weekend_days.groupby('hr')['cnt'].sum().reset_index()

# Membuat line chart untuk kedua analisis
plt.figure(figsize=(12, 6))
plt.plot(hourly_usage_working['hr'], hourly_usage_working['cnt'], marker='o', label='Hari Kerja', color='blue')
plt.plot(hourly_usage_weekend['hr'], hourly_usage_weekend['cnt'], marker='o', label='Akhir Pekan', color='orange')
plt.title('Jumlah Penggunaan Sepeda per Jam')
plt.xlabel('Jam')
plt.ylabel('Jumlah Penggunaan Sepeda')
plt.xticks(hourly_usage_working['hr'])
plt.legend()
plt.grid()
plt.show()

"""- Penggunaan pada Hari Kerja: Penggunaan sepeda sangat tinggi pada jam-jam sibuk, yaitu sekitar pukul 8 pagi dan pukul 5 sore. Ini menunjukkan bahwa sepeda banyak digunakan sebagai sarana transportasi utama untuk perjalanan ke dan dari tempat kerja atau sekolah. Puncak penggunaannya bahkan mencapai lebih dari 250.000 penyewaan.

- Penggunaan pada Akhir Pekan: Pada akhir pekan, penggunaan sepeda cenderung lebih stabil dan tidak menunjukkan lonjakan signifikan seperti pada hari kerja. Peningkatan penggunaan terjadi secara bertahap sepanjang siang hingga sore, tetapi jumlahnya jauh lebih sedikit dibandingkan dengan hari kerja, menunjukkan bahwa sepeda lebih digunakan untuk kegiatan santai atau rekreasi di akhir pekan.

## Conclusion

- Conclution pertanyaan 1 : Jumlah penyewaan sepeda tertinggi tercatat saat cuaca cerah, di mana pengguna terdaftar maupun kasual sama-sama aktif, menunjukkan bahwa cuaca baik sangat mendorong penggunaan sepeda. Dalam kondisi berkabut, penyewaan sepeda masih cukup baik, terutama oleh pengguna terdaftar, meskipun tidak setinggi saat cuaca cerah. Namun, saat cuaca buruk seperti hujan ringan atau salju, penyewaan sepeda menurun drastis, menunjukkan bahwa kondisi cuaca yang tidak mendukung sangat mempengaruhi keinginan orang untuk bersepeda.
- Conclution pertanyaan 2 : Penggunaan sepeda pada hari kerja sangat tinggi, menunjukkan bahwa sepeda merupakan alat transportasi utama bagi banyak orang pada hari-hari biasa. Sebaliknya, pada hari libur, penggunaan sepeda jauh lebih rendah dan tidak signifikan dibandingkan hari kerja. Ini mengindikasikan bahwa orang cenderung memilih aktivitas lain atau menggunakan transportasi alternatif selama akhir pekan.
- Conclution pertanyaan 3 : Penggunaan sepeda pada hari kerja sangat tinggi, terutama pada jam sibuk sekitar pukul 8 pagi dan 5 sore, dengan puncak mencapai lebih dari 250.000 penyewaan, menandakan sepeda sebagai sarana transportasi utama untuk bekerja atau sekolah. Sebaliknya, pada akhir pekan, penggunaan sepeda lebih stabil tanpa lonjakan besar, dengan peningkatan bertahap dari siang hingga sore, tetapi jumlahnya jauh lebih rendah, menunjukkan bahwa sepeda lebih sering digunakan untuk rekreasi atau kegiatan santai.
"""